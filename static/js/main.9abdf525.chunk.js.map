{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["octokit","Octokit","App","useState","S21issues","setS21Issues","F21issues","setF21Issues","useEffect","getIssues","repoName","a","request","per_page","sort","direction","response","then","res","justIssues","data","filter","issue","pull_request","console","log","className","href","prefix","style","margin","marginTop","paddingTop","paddingBottom","Tabs","Tab","id","label","Accordion","map","AccordionItem","title","number","assignee","login","body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yVAQMA,EAAU,IAAIC,IAyELC,MAvEf,WACE,MAAoCC,mBAAS,IAA7C,mBAAQC,EAAR,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,IAA7C,mBAAQG,EAAR,KAAmBC,EAAnB,KA8BA,OA5BAC,qBAAU,WAAO,SACAC,EADD,8EACd,WAAyBC,GAAzB,eAAAC,EAAA,sEACyBX,EAAQY,QAAR,qCAA8CF,EAA9C,WAAiE,CACtFG,SAAU,IACVC,KAAM,UACNC,UAAW,QAJf,cACQC,EADR,yBAMSA,GANT,4CADc,sBAWdP,EAAU,gBAAgBQ,MAAK,SAAAC,GAE7B,IAAMC,EAAaD,EAAIE,KAAKC,QAAO,SAAAC,GAAK,OAAKA,EAAMC,gBACnDC,QAAQC,IAAIN,GACZZ,EAAaY,MAIfV,EAAU,kBAAkBQ,MAAK,SAAAC,GAE/B,IAAMC,EAAaD,EAAIE,KAAKC,QAAO,SAAAC,GAAK,OAAKA,EAAMC,gBACnDC,QAAQC,IAAIN,GACZd,EAAac,QAGd,IAGD,sBAAKO,UAAU,MAAf,UACE,cAAC,SAAD,CAAQ,aAAW,oBAAnB,SACE,cAAC,aAAD,CAAYC,KAAK,IAAIC,OAAO,MAA5B,yDAIF,sBAAKC,MAAO,CAACC,OAAQ,OAAQC,UAAW,QAAxC,UACE,oBAAIF,MAAO,CAACG,WAAY,QAAxB,gDACA,oBAAIH,MAAO,CAACI,cAAe,QAA3B,6BACA,iGACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAG,QAAQC,MAAM,YAAtB,SACE,cAACC,EAAA,EAAD,UACGhC,EAAUiC,KAAI,SAAAjB,GACb,OAAO,eAACkB,EAAA,EAAD,CAAeC,MAAK,WAAMnB,EAAMoB,OAAZ,YAAsBpB,EAAMmB,OAAhD,UACL,6BAAKnB,EAAMqB,SAAWrB,EAAMqB,SAASC,MAAQ,SAC7C,cAAC,IAAD,CAAelB,UAAU,eAAzB,SAAyCJ,EAAMuB,iBAKvD,cAACV,EAAA,EAAD,CAAKC,GAAG,QAAQC,MAAM,cAAtB,SACE,cAACC,EAAA,EAAD,UACGlC,EAAUmC,KAAI,SAAAjB,GACb,OAAO,eAACkB,EAAA,EAAD,CAAeC,MAAK,WAAMnB,EAAMoB,OAAZ,YAAsBpB,EAAMmB,OAAhD,UACL,6BAAKnB,EAAMmB,QACX,cAAC,IAAD,CAAef,UAAU,eAAzB,SAAyCJ,EAAMuB,2BCzDlDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9abdf525.chunk.js","sourcesContent":["import './App.scss';\nimport { useEffect, useState } from 'react';\nimport { Octokit } from 'octokit';\n\nimport { Header, HeaderName,} from \"carbon-components-react/lib/components/UIShell\";\nimport { Accordion, AccordionItem, Tabs, Tab } from 'carbon-components-react'\nimport ReactMarkdown from 'react-markdown'\n\nconst octokit = new Octokit();\n\nfunction App() {\n  const [ S21issues, setS21Issues ] = useState([]);\n  const [ F21issues, setF21Issues ] = useState([]);\n\n  useEffect(() => {\n    async function getIssues(repoName) {\n      const response = await octokit.request(`GET /repos/qiskit-advocate/${repoName}/issues`, {\n        per_page: 100,\n        sort: 'created',\n        direction: 'asc'\n      })\n      return response\n    }\n\n    // get all issues from qamp-fall-21 repo\n    getIssues('qamp-fall-21').then(res => {\n      // filter out pull requests\n      const justIssues = res.data.filter(issue => !issue.pull_request)\n      console.log(justIssues)\n      setF21Issues(justIssues)\n    })\n\n    // get all issues from qamp-spring-21 repo\n    getIssues('qamp-spring-21').then(res => {\n      // filter out pull requests\n      const justIssues = res.data.filter(issue => !issue.pull_request)\n      console.log(justIssues)\n      setS21Issues(justIssues)\n    })\n    \n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header aria-label=\"IBM Platform Name\">\n        <HeaderName href=\"#\" prefix=\"IBM\">\n          Qiskit Advocate Mentorship Program (QAMP)\n        </HeaderName>\n      </Header>\n      <div style={{margin: \"10px\", marginTop: \"50px\"}}>\n        <h1 style={{paddingTop: \"20px\"}}>Qiskit Advocate Mentorship Program</h1>\n        <h1 style={{paddingBottom: \"20px\"}}>Project Summary</h1>\n        <p>Here you can see details of past and ongoing mentorship porjects</p>\n        <Tabs>\n          <Tab id=\"tab-1\" label=\"Fall 2021\">\n            <Accordion>\n              {F21issues.map(issue => {\n                return <AccordionItem title={`#${issue.number} ${issue.title}`}>\n                  <h3>{issue.assignee ? issue.assignee.login : 'blah'}</h3>\n                  <ReactMarkdown className=\"markDownElem\">{issue.body}</ReactMarkdown>\n                </AccordionItem>\n              })}\n            </Accordion>\n          </Tab>\n          <Tab id=\"tab-2\" label=\"Spring 2021\">\n            <Accordion>\n              {S21issues.map(issue => {\n                return <AccordionItem title={`#${issue.number} ${issue.title}`}>\n                  <h3>{issue.title}</h3>\n                  <ReactMarkdown className=\"markDownElem\">{issue.body}</ReactMarkdown>\n                </AccordionItem>\n              })}\n            </Accordion>\n          </Tab>\n        </Tabs>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}